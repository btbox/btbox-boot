<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.btbox</groupId>
        <artifactId>btbox-boot</artifactId>
        <version>${revision}</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>
    <artifactId>btbox-admin</artifactId>

    <description>
        web服务入口
    </description>

    <dependencies>

        <!-- Mysql驱动包 -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
        </dependency>
        <!-- Oracle -->
        <dependency>
            <groupId>com.oracle.database.jdbc</groupId>
            <artifactId>ojdbc8</artifactId>
        </dependency>
        <!-- PostgreSql -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
        <!-- SqlServer -->
        <dependency>
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>mssql-jdbc</artifactId>
        </dependency>

        <!-- h2数据库 -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.btbox</groupId>
            <artifactId>btbox-common-doc</artifactId>
        </dependency>

        <dependency>
            <groupId>org.btbox</groupId>
            <artifactId>btbox-system</artifactId>
        </dependency>

        <dependency>
            <groupId>org.btbox</groupId>
            <artifactId>btbox-job</artifactId>
        </dependency>


        <!--  demo模块  -->
        <dependency>
            <groupId>org.btbox</groupId>
            <artifactId>btbox-demo</artifactId>
        </dependency>

        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-client</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>me.zhyd.oauth</groupId>
            <artifactId>JustAuth</artifactId>
        </dependency>

        <!-- skywalking 整合 logback -->
<!--        <dependency>-->
<!--            <groupId>org.apache.skywalking</groupId>-->
<!--            <artifactId>apm-toolkit-logback-1.x</artifactId>-->
<!--            <version>${与你的agent探针版本保持一致}</version>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.apache.skywalking</groupId>-->
<!--            <artifactId>apm-toolkit-trace</artifactId>-->
<!--            <version>${与你的agent探针版本保持一致}</version>-->
<!--        </dependency>-->

        <dependency>
            <groupId>org.btbox</groupId>
            <artifactId>btbox-common-license</artifactId>
        </dependency>

    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven-war-plugin.version}</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <warName>${project.artifactId}</warName>
                </configuration>
            </plugin>
            <!--<plugin>-->
            <!--    &lt;!&ndash;-->
            <!--        1. 加密后,方法体被清空,保留方法参数、注解等信息.主要兼容swagger文档注解扫描-->
            <!--        2. 方法体被清空后,反编译只能看到方法名和注解,看不到方法体的具体内容-->
            <!--        3. 加密后的项目需要设置javaagent来启动,启动过程中解密class,完全内存解密,不留下任何解密后的文件-->
            <!--        4. 启动加密后的jar,生成xxx-encrypted.jar,这个就是加密后的jar文件,加密后不可直接执行-->
            <!--        5. 无密码启动方式,java -javaagent:xxx-encrypted.jar -jar xxx-encrypted.jar-->
            <!--        6. 有密码启动方式,java -javaagent:xxx-encrypted.jar='-pwd= 密码' -jar xxx-encrypted.jar-->
            <!--    &ndash;&gt;-->
            <!--    <groupId>net.roseboy</groupId>-->
            <!--    <artifactId>classfinal-maven-plugin</artifactId>-->
            <!--    <version>1.2.1</version>-->
            <!--    <configuration>-->
            <!--        <password>#</password>&lt;!&ndash; #表示启动时不需要密码,事实上对于代码混淆来说,这个密码没什么用,它只是一个启动密码 &ndash;&gt;-->
            <!--        <excludes>org.spring</excludes>-->
            <!--        <packages>${groupId}</packages>&lt;!&ndash; 加密的包名,多个包用逗号分开 &ndash;&gt;-->
            <!--        <cfgfiles>application.yml,application-dev.yml,application-prod.yml</cfgfiles>&lt;!&ndash; 加密的配置文件,多个包用逗号分开 &ndash;&gt;-->
            <!--        <libjars>hutool-all.jar</libjars> &lt;!&ndash; jar包lib下面要加密的jar依赖文件,多个包用逗号分开 &ndash;&gt;-->
            <!--        &lt;!&ndash;<code>xxxx</code> &lt;!&ndash; 指定机器启动,机器码 &ndash;&gt;&ndash;&gt;-->
            <!--    </configuration>-->
            <!--    <executions>-->
            <!--        <execution>-->
            <!--            <phase>package</phase>-->
            <!--            <goals>-->
            <!--                <goal>classFinal</goal>-->
            <!--            </goals>-->
            <!--        </execution>-->
            <!--    </executions>-->
            <!--</plugin>-->
        </plugins>
    </build>

</project>
